// Test cu·ªëi c√πng - house edge 70% th√¥ng minh
// Ch·∫°y: node test-final-house-edge.js

console.log('üé∞ FINAL HOUSE EDGE TEST - 70% Dealer Advantage\n');

// M√¥ ph·ªèng logic house edge c·∫£i ti·∫øn
function simulateImprovedHouseEdge(playerValue, dealerValue, dealerBust = false, iterations = 1000) {
  let dealerWins = 0;
  let playerWins = 0;
  let pushes = 0;
  
  const HOUSE_WIN_RATE = 0.7;
  
  for (let i = 0; i < iterations; i++) {
    const houseEdgeRoll = Math.random();
    let result;
    
    if (dealerBust) {
      if (houseEdgeRoll <= HOUSE_WIN_RATE) {
        // 70%: "S·ª≠a" dealer th√†nh 17-21
        const targetValue = Math.max(17, Math.min(21, playerValue + Math.floor(Math.random() * 2)));
        if (targetValue >= playerValue) {
          result = targetValue > playerValue ? 'dealerWin' : 'push';
        } else {
          result = 'dealerWin'; // House edge
        }
      } else {
        // 30%: Dealer th·ª±c s·ª± bust
        result = 'dealerBust';
      }
    } else {
      if (houseEdgeRoll <= HOUSE_WIN_RATE) {
        // 70%: Logic ∆∞u ti√™n dealer
        if (dealerValue >= playerValue) {
          result = dealerValue > playerValue ? 'dealerWin' : 'push';
        } else {
          const pointDiff = playerValue - dealerValue;
          if (pointDiff <= 5) {
            result = 'dealerWin'; // House edge m·∫°nh
          } else {
            result = 'push'; // Ch√™nh l·ªách l·ªõn ‚Üí h√≤a thay v√¨ th·∫Øng
          }
        }
      } else {
        // 30%: Logic g·∫ßn c√¥ng b·∫±ng
        if (playerValue > dealerValue + 1) {
          result = 'playerWin';
        } else if (playerValue <= dealerValue) {
          result = 'dealerWin';
        } else {
          result = 'push';
        }
      }
    }
    
    if (result === 'dealerWin') dealerWins++;
    else if (result === 'playerWin' || result === 'dealerBust') playerWins++;
    else pushes++;
  }
  
  return {
    dealerWinRate: (dealerWins / iterations * 100).toFixed(1),
    playerWinRate: (playerWins / iterations * 100).toFixed(1),
    pushRate: (pushes / iterations * 100).toFixed(1),
    dealerWins,
    playerWins,
    pushes
  };
}

// Test cases kh√°c nhau
const scenarios = [
  { name: 'Player 21, Dealer 17', player: 21, dealer: 17 },
  { name: 'Player 20, Dealer 18', player: 20, dealer: 18 },
  { name: 'Player 21, Dealer 15', player: 21, dealer: 15 },
  { name: 'Player 19, Dealer 19', player: 19, dealer: 19 },
  { name: 'Player 18, Dealer 22 (bust)', player: 18, dealer: 22, bust: true },
  { name: 'Player 20, Dealer 19', player: 20, dealer: 19 },
  { name: 'Player 17, Dealer 21', player: 17, dealer: 21 }
];

console.log('üß™ TESTING IMPROVED HOUSE EDGE:\n');

let totalDealerWins = 0;
let totalPlayerWins = 0;
let totalPushes = 0;
let totalGames = 0;

scenarios.forEach((scenario, index) => {
  console.log(`üìã Test ${index + 1}: ${scenario.name}`);
  
  const result = simulateImprovedHouseEdge(
    scenario.player, 
    scenario.dealer, 
    scenario.bust,
    1000
  );
  
  console.log(`üìä Results:`);
  console.log(`   ü§ñ Dealer: ${result.dealerWinRate}%`);
  console.log(`   üë§ Player: ${result.playerWinRate}%`);
  console.log(`   ü§ù Push: ${result.pushRate}%`);
  
  totalDealerWins += result.dealerWins;
  totalPlayerWins += result.playerWins;
  totalPushes += result.pushes;
  totalGames += 1000;
  
  console.log('‚îÄ'.repeat(50));
});

console.log('\nüìä OVERALL STATISTICS:');
console.log(`üéÆ Total Games Simulated: ${totalGames.toLocaleString()}`);
console.log(`ü§ñ Dealer Win Rate: ${(totalDealerWins / totalGames * 100).toFixed(1)}%`);
console.log(`üë§ Player Win Rate: ${(totalPlayerWins / totalGames * 100).toFixed(1)}%`);
console.log(`ü§ù Push Rate: ${(totalPushes / totalGames * 100).toFixed(1)}%`);

const dealerAdvantage = (totalDealerWins / totalGames * 100);
console.log(`\nüéØ TARGET: 70% dealer wins`);
console.log(`üìà ACTUAL: ${dealerAdvantage.toFixed(1)}% dealer wins`);
console.log(`‚úÖ SUCCESS: ${dealerAdvantage >= 65 && dealerAdvantage <= 75 ? 'YES' : 'NO'}`);

console.log('\nüè† HOUSE EDGE FEATURES:');
console.log('‚úÖ 70% c∆° h·ªôi dealer c√≥ l·ª£i th·∫ø');
console.log('‚úÖ Dealer bust c√≥ th·ªÉ ƒë∆∞·ª£c "c·ª©u" th√†nh 17-21');
console.log('‚úÖ Ch√™nh l·ªách ‚â§5 ƒëi·ªÉm: Dealer th·∫Øng (house edge)');
console.log('‚úÖ Ch√™nh l·ªách >5 ƒëi·ªÉm: H√≤a (kh√¥ng cho player th·∫Øng d·ªÖ)');
console.log('‚úÖ 30% th·ªùi gian: Logic g·∫ßn c√¥ng b·∫±ng nh∆∞ng v·∫´n ∆∞u ti√™n dealer');
console.log('‚úÖ Player c·∫ßn ch√™nh l·ªách >1 ƒëi·ªÉm m·ªõi c√≥ c∆° h·ªôi th·∫Øng');

console.log('\nüí∞ K·∫æT LU·∫¨N:');
if (dealerAdvantage >= 65 && dealerAdvantage <= 75) {
  console.log('üéä HO√ÄN H·∫¢O! Bot c√≥ l·ª£i th·∫ø ~70% nh∆∞ mong mu·ªën!');
} else {
  console.log('‚ö†Ô∏è C·∫ßn ƒëi·ªÅu ch·ªânh th√™m ƒë·ªÉ ƒë·∫°t 70% ch√≠nh x√°c.');
}
