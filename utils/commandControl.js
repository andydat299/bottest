/**
 * Command Control System - H·ªá th·ªëng qu·∫£n l√Ω b·∫≠t/t·∫Øt l·ªánh
 */

// Danh s√°ch l·ªánh c√≥ th·ªÉ b·ªã disable
const CONTROLLABLE_COMMANDS = [
  'sell',
  'fish', 
  'upgrade',
  'repair',
  'inventory',
  'stats',
  'profile',
  'quests'
];

// Set ch·ª©a c√°c l·ªánh b·ªã disable
let disabledCommands = new Set();

/**
 * Ki·ªÉm tra xem l·ªánh c√≥ b·ªã disable kh√¥ng
 */
export function isCommandDisabled(commandName) {
  return disabledCommands.has(commandName);
}

/**
 * Disable m·ªôt l·ªánh
 */
export function disableCommand(commandName) {
  if (!CONTROLLABLE_COMMANDS.includes(commandName)) {
    return {
      success: false,
      message: `‚ùå L·ªánh "${commandName}" kh√¥ng th·ªÉ b·ªã disable!`
    };
  }
  
  disabledCommands.add(commandName);
  return {
    success: true,
    message: `üîí ƒê√£ T·∫ÆT l·ªánh "/${commandName}"!`
  };
}

/**
 * Enable m·ªôt l·ªánh
 */
export function enableCommand(commandName) {
  if (!CONTROLLABLE_COMMANDS.includes(commandName)) {
    return {
      success: false,
      message: `‚ùå L·ªánh "${commandName}" kh√¥ng t·ªìn t·∫°i trong danh s√°ch qu·∫£n l√Ω!`
    };
  }
  
  disabledCommands.delete(commandName);
  return {
    success: true,
    message: `üîì ƒê√£ B·∫¨T l·ªánh "/${commandName}"!`
  };
}

/**
 * L·∫•y danh s√°ch l·ªánh b·ªã disable
 */
export function getDisabledCommands() {
  return Array.from(disabledCommands);
}

/**
 * L·∫•y danh s√°ch t·∫•t c·∫£ l·ªánh c√≥ th·ªÉ qu·∫£n l√Ω
 */
export function getControllableCommands() {
  return [...CONTROLLABLE_COMMANDS];
}

/**
 * L·∫•y tr·∫°ng th√°i c·ªßa t·∫•t c·∫£ l·ªánh
 */
export function getCommandStatus() {
  const status = {};
  for (const cmd of CONTROLLABLE_COMMANDS) {
    status[cmd] = !disabledCommands.has(cmd) ? '‚úÖ Enabled' : '‚ùå Disabled';
  }
  
  return {
    totalCommands: CONTROLLABLE_COMMANDS.length,
    disabledCount: disabledCommands.size,
    enabledCount: CONTROLLABLE_COMMANDS.length - disabledCommands.size,
    commands: status,
    disabledList: Array.from(disabledCommands)
  };
}

/**
 * Reset t·∫•t c·∫£ l·ªánh v·ªÅ enabled
 */
export function resetAllCommands() {
  const previouslyDisabled = Array.from(disabledCommands);
  disabledCommands.clear();
  
  return {
    success: true,
    message: `üîÑ ƒê√£ reset t·∫•t c·∫£ l·ªánh! ƒê√£ b·∫≠t l·∫°i ${previouslyDisabled.length} l·ªánh.`,
    resetCommands: previouslyDisabled
  };
}
