import { SlashCommandBuilder, EmbedBuilder } from 'discord.js';
import { isAdmin, createNoPermissionEmbed } from '../utils/adminUtils.js';

const data = new SlashCommandBuilder()
  .setName('adminhelp')
  .setDescription('[ADMIN] Hi·ªÉn th·ªã danh s√°ch l·ªánh admin');

async function execute(interaction) {
  // Ki·ªÉm tra quy·ªÅn admin
  if (!isAdmin(interaction.user.id)) {
    return interaction.reply({ 
      embeds: [createNoPermissionEmbed(EmbedBuilder)], 
      ephemeral: true 
    });
  }

  const embed = new EmbedBuilder()
    .setColor('#FF6600')
    .setTitle('üõ†Ô∏è Danh s√°ch l·ªánh Admin')
    .setDescription('C√°c l·ªánh qu·∫£n tr·ªã vi√™n c√≥ th·ªÉ s·ª≠ d·ª•ng:')
    .addFields(
      {
        name: 'üí∞ Qu·∫£n l√Ω ti·ªÅn',
        value: `</addmoney:0> - Th√™m ti·ªÅn cho ng∆∞·ªùi d√πng\n</removemoney:0> - Tr·ª´ ti·ªÅn c·ªßa ng∆∞·ªùi d√πng\n</setmoney:0> - ƒê·∫∑t s·ªë ti·ªÅn c·ªßa ng∆∞·ªùi d√πng`,
        inline: false
      },
      {
        name: 'üë§ Qu·∫£n l√Ω ng∆∞·ªùi d√πng',
        value: `</userinfo:0> - Xem th√¥ng tin chi ti·∫øt ng∆∞·ªùi d√πng\n</resetuser:0> - Reset d·ªØ li·ªáu ng∆∞·ªùi d√πng\n</leaderboard:0> - Xem b·∫£ng x·∫øp h·∫°ng`,
        inline: false
      },
      {
        name: 'üìä Th·ªëng k√™',
        value: `</leaderboard:0> - Xem top ng∆∞·ªùi d√πng theo nhi·ªÅu ti√™u ch√≠\n- Top ti·ªÅn, c·∫•p c·∫ßn, s·ªë c√°, tin nh·∫Øn, c√¢u c√° th√†nh c√¥ng`,
        inline: false
      },
      {
        name: '‚öôÔ∏è Kh√°c',
        value: `</adminhelp:0> - Hi·ªÉn th·ªã danh s√°ch l·ªánh n√†y`,
        inline: false
      }
    )
    .addFields(
      {
        name: '‚ö†Ô∏è L∆∞u √Ω quan tr·ªçng',
        value: `‚Ä¢ T·∫•t c·∫£ l·ªánh admin ƒë·ªÅu ƒë∆∞·ª£c ghi log\n‚Ä¢ H√£y c·∫©n th·∫≠n khi s·ª≠ d·ª•ng l·ªánh reset\n‚Ä¢ Ch·ªâ admin ƒë∆∞·ª£c c·∫•u h√¨nh trong ADMIN_IDS m·ªõi c√≥ th·ªÉ s·ª≠ d·ª•ng`,
        inline: false
      }
    )
    .setTimestamp()
    .setFooter({ 
      text: `Admin: ${interaction.user.username}`, 
      iconURL: interaction.user.displayAvatarURL() 
    });

  await interaction.reply({ embeds: [embed], ephemeral: true });
}

export default { data, execute };
